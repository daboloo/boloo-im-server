<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <properties>
    <!--自定义一些常量，之后使用${变量名}引用-->
    <Property name="logFilePath">log</Property>
    <!-- 文件输出格式 -->
    <property name="PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} |-%-5level [%thread] %c [%L] -| %msg%n</property>
  </properties>

  <appenders>
    <Console name="CONSOLE" target="system_out">
      <PatternLayout pattern="${PATTERN}" />
    </Console>

    <!-- ${sys:user.home} :项目路径 -->
    <RollingFile name="RollingFileInfo" fileName="${sys:user.home}/logs/info.log"
                 filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
      <!--ThresholdFilter :日志输出过滤-->
      <!--level="info" :日志级别,onMatch="ACCEPT" :级别在info之上则接受,onMismatch="DENY" :级别在info之下则拒绝-->
      <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
      <PatternLayout pattern="${PATTERN}"/>
      <!-- Policies :日志滚动策略-->
      <Policies>
        <!-- TimeBasedTriggeringPolicy :时间滚动策略,默认0点小时产生新的文件,interval="6" : 自定义文件滚动时间间隔,每隔6小时产生新文件, modulate="true" : 产生文件是否以0点偏移时间,即6点,12点,18点,0点-->
        <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
        <!-- SizeBasedTriggeringPolicy :文件大小滚动策略-->
        <SizeBasedTriggeringPolicy size="100 MB"/>
      </Policies>
      <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
      <DefaultRolloverStrategy max="20"/>
    </RollingFile>

    <RollingFile name="RollingFileWarn" fileName="${sys:user.home}/logs/warn.log"
                 filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">
      <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
      <PatternLayout pattern="${PATTERN}"/>
      <Policies>
        <TimeBasedTriggeringPolicy/>
        <SizeBasedTriggeringPolicy size="100 MB"/>
      </Policies>
    </RollingFile>

    <RollingFile name="RollingFileError" fileName="${sys:user.home}/logs/error.log"
                 filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
      <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
      <PatternLayout pattern="${PATTERN}"/>
      <Policies>
        <TimeBasedTriggeringPolicy/>
        <SizeBasedTriggeringPolicy size="100 MB"/>
      </Policies>
    </RollingFile>

  </appenders>

  <loggers>
    <root level="all">
      <appender-ref ref="CONSOLE"/>
      <appender-ref ref="RollingFileInfo"/>
      <appender-ref ref="RollingFileWarn"/>
      <appender-ref ref="RollingFileError"/>
    </root>
    <!--AsyncLogger :异步日志,LOG4J有三种日志模式,全异步日志,混合模式,同步日志,性能从高到底,线程越多效率越高,也可以避免日志卡死线程情况发生-->
    <!--additivity="false" : additivity设置事件是否在root logger输出，为了避免重复输出，可以在Logger 标签下设置additivity为”false”-->
    <AsyncLogger name="AsyncLogger" level="trace" includeLocation="true" additivity="false">
      <appender-ref ref="RollingFileError"/>
    </AsyncLogger>
  </loggers>
</configuration>